==784== Memcheck, a memory error detector
==784== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==784== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==784== Command: build/bin/sensord --config sensor.conf
==784== Parent PID: 783
==784== 
==784== Warning: noted but unhandled ioctl 0x8946 with no size/direction hints
==784==    This could cause spurious value errors to appear.
==784==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C2EF: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C2F7: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Warning: noted but unhandled ioctl 0x8946 with no size/direction hints
==784==    This could cause spurious value errors to appear.
==784==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C314: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C31C: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Warning: noted but unhandled ioctl 0x8946 with no size/direction hints
==784==    This could cause spurious value errors to appear.
==784==    See README_MISSING_SYSCALL_OR_IOCTL for guidance on writing a proper wrapper.
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C339: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C341: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C35E: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C367: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C384: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== Conditional jump or move depends on uninitialised value(s)
==784==    at 0x505C38C: ??? (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x5061727: pcap_activate (in /usr/lib/libpcap.so.1.3.0)
==784==    by 0x418E21: create_pcap_handle(sensor*) (sensor.cpp:217)
==784==    by 0x4190DB: sensor_main (sensor.cpp:270)
==784==    by 0x41882D: main (sensord.c:176)
==784==  Uninitialised value was created by a stack allocation
==784==    at 0x5059BC0: ??? (in /usr/lib/libpcap.so.1.3.0)
==784== 
==784== 
==784== FILE DESCRIPTORS: 4 open at exit.
==784== Open file descriptor 3: /home/reiver/DEVELOP/epic-ids/sensor/valgrind-memcheck.log
==784==    <inherited from parent>
==784== 
==784== Open file descriptor 2: /dev/pts/1
==784==    <inherited from parent>
==784== 
==784== Open file descriptor 1: /dev/pts/1
==784==    <inherited from parent>
==784== 
==784== Open file descriptor 0: /dev/pts/1
==784==    <inherited from parent>
==784== 
==784== 
==784== HEAP SUMMARY:
==784==     in use at exit: 115 bytes in 5 blocks
==784==   total heap usage: 6,631 allocs, 6,626 frees, 239,350 bytes allocated
==784== 
==784== 35 bytes in 3 blocks are definitely lost in loss record 1 of 3
==784==    at 0x4C2C04B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==784==    by 0x417BE2: parseValue (kvset.c:144)
==784==    by 0x417F0A: LoadKVS (kvset.c:221)
==784==    by 0x4185D6: read_config (sensord.c:119)
==784==    by 0x418636: main (sensord.c:129)
==784== 
==784== 40 bytes in 1 blocks are indirectly lost in loss record 2 of 3
==784==    at 0x4C2BA77: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==784==    by 0x41E0AD: void mq::MessageQueue::send<void, int>(void (*)(int), int&&) (msgqueue.hpp:42)
==784==    by 0x41DF82: TrafficCapture::run() (traffic_capture.cpp:28)
==784==    by 0x41A39C: TrafficCapture::start(TrafficCapture*) (traffic_capture.hpp:23)
==784==    by 0x4E3AE0E: start_thread (in /usr/lib/libpthread-2.16.so)
==784==    by 0x5B8831C: clone (in /usr/lib/libc-2.16.so)
==784== 
==784== 80 (40 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==784==    at 0x4C2BA77: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==784==    by 0x41E0AD: void mq::MessageQueue::send<void, int>(void (*)(int), int&&) (msgqueue.hpp:42)
==784==    by 0x41DF82: TrafficCapture::run() (traffic_capture.cpp:28)
==784==    by 0x41A39C: TrafficCapture::start(TrafficCapture*) (traffic_capture.hpp:23)
==784==    by 0x4E3AE0E: start_thread (in /usr/lib/libpthread-2.16.so)
==784==    by 0x5B8831C: clone (in /usr/lib/libc-2.16.so)
==784== 
==784== LEAK SUMMARY:
==784==    definitely lost: 75 bytes in 4 blocks
==784==    indirectly lost: 40 bytes in 1 blocks
==784==      possibly lost: 0 bytes in 0 blocks
==784==    still reachable: 0 bytes in 0 blocks
==784==         suppressed: 0 bytes in 0 blocks
==784== 
==784== For counts of detected and suppressed errors, rerun with: -v
==784== ERROR SUMMARY: 12 errors from 12 contexts (suppressed: 2 from 2)
